(()=>{"use strict";const e=()=>{let e=localStorage.getItem("myProject");return e?JSON.parse(e):[]},t=(e,t)=>{let o,r=JSON.parse(localStorage.getItem("myProject"));r.map(((c,n)=>{c.name==t.name&&e.name==t.name?(r.splice(n,1),o=JSON.stringify(r),localStorage.setItem("myProject",o)):c.name==t.name&&(r.splice(n,1,e),o=JSON.stringify(r),localStorage.setItem("myProject",o))}))},o=e=>{localStorage.setItem("currentProject",JSON.stringify(e))},r=()=>{let e=localStorage.getItem("currentProject");return e?JSON.parse(e):null},c=document.getElementsByClassName("modal"),n=document.querySelector(".project"),l=document.querySelector(".toggle-project"),a=document.querySelectorAll(".toggle-icons"),s=document.getElementById("add-project"),d=document.querySelector(".new-project-form-modal"),m=document.querySelector(".new-project-form"),i=document.getElementsByClassName("cancel"),u=document.querySelector(".project-list"),g=document.querySelector(".project-body"),p=document.querySelector(".project-name"),y=document.querySelector(".todo-list");l.onclick=()=>{n.classList.toggle("active"),a.forEach((e=>e.classList.toggle("hidden")))},s.onclick=()=>{d.classList.toggle("hidden")},m.addEventListener("submit",(t=>{let r={name:t.target.elements.name.value,todo:[]};(t=>{let o=e();o.push(t),localStorage.setItem("myProject",JSON.stringify(o))})(r),o(r)})),Array.from(i).forEach((e=>{let t=e.closest("section");e.onclick=()=>{t.classList.toggle("hidden")}})),window.addEventListener("click",(e=>{e.target.className.split(" ").some((e=>"modal"==e))&&Array.from(c).forEach((e=>{e.classList.add("hidden")}))})),e().map((e=>{let t=document.createElement("li");t.innerHTML=e.name,t.classList.add("list-item"),u.appendChild(t)})),(()=>{let t=document.getElementsByClassName("list-item");Array.from(t).forEach((t=>{t.addEventListener("click",(()=>{let n=(t=>e().find((e=>e.name==t)))(t.textContent);o(n),r(n),c(n),g.classList.remove("hidden")}))}));let r=e=>{p.innerHTML=e.name},c=e=>{let t=(e=>{let t=[];return e.todo.forEach((e=>{let o=`\n    <tr class='${e.checked?"complete":e.priority}'>\n      <td>${e.title}</td>\n      <td>${e.due}</td>\n      <td>${e.priority}</td>\n      <td>\n        <button class='progress'>\n          ${e.checked?"<span class='material-icons'>task_alt</span>":"<span class='material-icons'>remove_circle_outline</span>"}\n        </button>\n      </td>\n      <td><button class='edit-todo'><span class="material-icons">zoom_in</span></button></td>\n      <td><button class='delete-todo'><span class="material-icons">delete_forever</span></button></td>\n    </tr>`;t.push(o)})),t})(e);t&&(y.innerHTML=t.map((e=>e)).join(""))}})();const S=document.querySelector(".project-body"),j=document.querySelector(".project-name"),f=document.querySelector(".edit-project-form-modal"),h=document.querySelector(".edit-project-form"),L=document.querySelector(".edit-project"),q=document.querySelector(".delete-project"),E=document.querySelector(".new-todo-form-modal"),v=(document.querySelector(".new-todo-form"),document.querySelector(".new-todo"));0==e().length&&S.classList.add("hidden"),(()=>{let e=r();e&&(j.innerHTML=e.name,S.classList.remove("hidden"))})(),L.onclick=()=>{f.classList.toggle("hidden")},h.addEventListener("submit",(e=>{let c=r(),n=r();n.name=e.target.elements.name.value,o(n),t(n,c)})),q.addEventListener("click",(e=>{if(!confirm("Delete this project?"))return;let o=r(),c=r();localStorage.removeItem("currentProject"),t(c,o),location.reload()})),v.onclick=()=>{E.classList.toggle("hidden")}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,