(()=>{"use strict";const e=()=>{let e=localStorage.getItem("myProject");return e?JSON.parse(e):[]},t=t=>e().find((e=>e.name==t)),o=(t,o)=>{let r,l=e();l.map(((e,n)=>{e.name==o.name&&t===o?(l.splice(n,1),r=JSON.stringify(l),localStorage.setItem("myProject",r)):e.name==o.name&&(l.splice(n,1,t),r=JSON.stringify(l),localStorage.setItem("myProject",r))}))},r=e=>{localStorage.setItem("currentProject",JSON.stringify(e))},l=()=>{let e=localStorage.getItem("currentProject");return e?JSON.parse(e):null},n=e=>{let t=(e=>{let t=[];return e.todo.forEach(((e,o)=>{let r=`\n    <tr class='${e.checked?"complete":e.priority}'>\n      <td>${e.title}</td>\n      <td>${e.due}</td>\n      <td>${e.priority}</td>\n      <td>\n        <button class='check-todo' data-index='${o}'>\n          ${e.checked?"<span class='material-icons'>task_alt</span>":"<span class='material-icons'>remove_circle_outline</span>"}\n        </button>\n      </td>\n      <td><button class='edit-todo' data-index='${o}'><span class="material-icons">description</span></button></td>\n      <td><button class='delete-todo' data-index='${o}'><span class="material-icons">delete_forever</span></button></td>\n    </tr>`;t.push(r)})),t})(e);return t?t.map((e=>e)).join(""):[]},c=e=>{let t=l(),n=l(),c=e.target.closest("button").dataset.index,a=n.todo[c];a.checked=!a.checked,r(n),o(n,t),location.reload()},a=e=>{if(!confirm("Delete this todo?"))return;let t=l(),n=l(),c=e.target.closest("button").dataset.index;n.todo.splice(c,1),r(n),o(n,t),location.reload()},d=document.getElementsByClassName("modal"),s=document.querySelector(".project"),i=document.querySelector(".toggle-project"),m=document.querySelectorAll(".toggle-icons"),u=document.getElementById("add-project"),y=document.querySelector(".new-project-form-modal"),g=document.querySelector(".new-project-form"),p=document.getElementsByClassName("cancel"),f=document.querySelector(".project-list"),S=document.querySelector(".project-body"),h=document.querySelector(".project-name"),L=document.querySelector(".todo-list"),v=document.getElementsByClassName("list-item");i.onclick=()=>{s.classList.toggle("active"),m.forEach((e=>e.classList.toggle("hidden")))},u.onclick=()=>{y.classList.toggle("hidden")},g.addEventListener("submit",(t=>{let o={name:t.target.elements.name.value,todo:[]};(t=>{let o=e();o.push(t),localStorage.setItem("myProject",JSON.stringify(o))})(o),r(o)})),Array.from(p).forEach((e=>{let t=e.closest("section");e.onclick=()=>{t.classList.toggle("hidden")}})),window.addEventListener("click",(e=>{e.target.className.split(" ").some((e=>"modal"==e))&&Array.from(d).forEach((e=>{e.classList.add("hidden")}))})),e().map((e=>{let t=document.createElement("li");t.innerHTML=e.name,t.classList.add("list-item"),f.appendChild(t)})),Array.from(v).forEach((e=>{e.addEventListener("click",(o=>{let l=t(e.textContent);r(l),h.innerHTML=l.name,L.innerHTML=n(l),S.classList.remove("hidden"),location.reload()}))})),(()=>{let e=Array.from(v),o=l();e.forEach((e=>{e.classList.remove("selected"),t(e.textContent).name==o.name&&e.classList.add("selected")}))})();const E=document.querySelector(".project-body"),j=document.querySelector(".project-name"),q=document.querySelector(".edit-project-form-modal"),k=document.querySelector(".edit-project-form"),b=document.querySelector(".edit-project"),N=document.querySelector(".delete-project"),C=document.querySelector(".new-todo-form-modal"),x=document.querySelector(".new-todo-form"),A=document.querySelector(".new-todo"),I=document.querySelector(".todo-list"),$=(0==e().length&&E.classList.add("hidden"),(()=>{let e=l();e&&(j.innerHTML=e.name,E.classList.remove("hidden"),I.innerHTML=n(e))})(),b.onclick=()=>{q.classList.toggle("hidden")},k.addEventListener("submit",(e=>{let t=l(),n=l();n.name=e.target.elements.name.value,r(n),o(n,t)})),N.addEventListener("click",(()=>{if(!confirm("Delete this project?"))return;let e=l(),t=l();localStorage.removeItem("currentProject"),o(t,e),location.reload()})),A.onclick=()=>{C.classList.toggle("hidden")},x.addEventListener("submit",(e=>{let t=(e=>{let t=e.target.elements;return{title:t.title.value,due:t.due.value,priority:t.priority.value,checked:!1}})(e),n=l(),c=l();c.todo.push(t),r(c),o(c,n)})),document.getElementsByClassName("check-todo")),w=document.getElementsByClassName("edit-todo"),B=document.querySelector(".edit-todo-form-modal"),P=document.querySelector(".edit-todo-form"),J=document.getElementsByClassName("delete-todo");Array.from($).forEach((e=>{e.addEventListener("click",c)})),Array.from(w).forEach((e=>{e.addEventListener("click",(e=>{B.classList.toggle("hidden");let t=e.target.closest("button").dataset.index;((e,t)=>{let o=l().todo[t],r=o.title,n=o.due,c=o.priority;e.title.value=r,e.due.value=n,e.priority.value=c})(P,t),P.addEventListener("submit",(e=>{((e,t)=>{let n=l(),c=l(),a=c.todo[t],d=e.target.elements;a.title=d.title.value,a.due=d.due.value,a.priority=d.priority.value,r(c),o(c,n)})(e,t)}))}))})),Array.from(J).forEach((e=>{e.addEventListener("click",a)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvX2xpc3QvLi9zcmMvcHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvX2xpc3QvLi9zcmMvdG9kby5qcyIsIndlYnBhY2s6Ly90b2RvX2xpc3QvLi9zcmMvc2lkZWJhci5qcyIsIndlYnBhY2s6Ly90b2RvX2xpc3QvLi9zcmMvYm9keS5qcyIsIndlYnBhY2s6Ly90b2RvX2xpc3QvLi9zcmMvdGFibGUuanMiXSwibmFtZXMiOlsiZ2V0QWxsUHJvamVjdHMiLCJwcm9qZWN0TFMiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiSlNPTiIsInBhcnNlIiwiZmluZFByb2plY3QiLCJwcm9qZWN0TmFtZSIsImZpbmQiLCJzdG9yZWRQcm9qZWN0IiwibmFtZSIsInVwZGF0ZVByb2plY3RTdG9yYWdlIiwibmV3UHJvamVjdCIsIm9sZFByb2plY3QiLCJ0ZW1wU3RvcmFnZSIsInByb2plY3RTdG9yYWdlIiwibWFwIiwicHJvamVjdCIsImluZGV4Iiwic3BsaWNlIiwic3RyaW5naWZ5Iiwic2V0SXRlbSIsInN5bmNQcm9qZWN0IiwiZ2V0Q3VycmVudFByb2plY3QiLCJjdXJyZW50UHJvamVjdExTIiwic2hvd1RvZG9zIiwidG9kb0l0ZW1zIiwidGFibGVSb3dzIiwidG9kbyIsImZvckVhY2giLCJyb3dIdG1sIiwiY2hlY2tlZCIsInByaW9yaXR5IiwidGl0bGUiLCJkdWUiLCJwdXNoIiwiZ2V0VG9kb0NvbnRlbnQiLCJ0YWJsZVJvdyIsImpvaW4iLCJjaGVja1RvZG8iLCJlIiwidG9kb0luZGV4IiwidGFyZ2V0IiwiY2xvc2VzdCIsImRhdGFzZXQiLCJhbHRlcmVkVG9kbyIsImxvY2F0aW9uIiwicmVsb2FkIiwiZGVsZXRlVG9kbyIsImNvbmZpcm0iLCJtb2RhbFNlY3Rpb25zIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwic2lkZWJhciIsInF1ZXJ5U2VsZWN0b3IiLCJ0b2dnbGVCdG4iLCJ0b2dnbGVJY29ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhZGRQcm9qZWN0QnRuIiwiZ2V0RWxlbWVudEJ5SWQiLCJuZXdQcm9qZWN0TW9kYWwiLCJuZXdQcm9qZWN0Rm9ybSIsImNhbmNlbEJ0bnMiLCJwcm9qZWN0TGlzdCIsInByb2plY3RCb2R5IiwidG9kb0xpc3QiLCJwcm9qZWN0c0xpc3QiLCJvbmNsaWNrIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiaWNvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJlbGVtZW50cyIsInZhbHVlIiwiYWxsUHJvamVjdHMiLCJzdG9yZVByb2plY3QiLCJBcnJheSIsImZyb20iLCJidXR0b24iLCJtb2RhbCIsIndpbmRvdyIsImNsYXNzTmFtZSIsInNwbGl0Iiwic29tZSIsIm9uZWNsYXNzIiwic2VjdGlvbiIsImFkZCIsIm5ld0xpbmUiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwiYXBwZW5kQ2hpbGQiLCJsaXN0SXRlbSIsInRleHRDb250ZW50IiwicmVtb3ZlIiwicHJvamVjdHNBcnJheSIsImVkaXRQcm9qZWN0TW9kYWwiLCJlZGl0UHJvamVjdEZvcm0iLCJlZGl0UHJvamVjdEJ0biIsImRlbFByb2plY3RCdG4iLCJuZXdUb2RvTW9kYWwiLCJuZXdUb2RvQnRuIiwiY2hlY2tUb2RvQnRucyIsImxlbmd0aCIsImN1cnJlbnRQcm9qZWN0IiwicmVtb3ZlSXRlbSIsIm5ld1RvZG8iLCJmb3JtRGF0YSIsImNyZWF0ZVRvZG8iLCJlZGl0VG9kb0J0bnMiLCJlZGl0VG9kb01vZGFsIiwiZWRpdFRvZG9Gb3JtIiwiZGVsVG9kb0J0bnMiLCJmb3JtIiwib2xkVG9kbyIsIm9sZFRpdGxlIiwib2xkRHVlIiwib2xkUHJpb3JpdHkiLCJmaWxsVG9kb2NvbnRlbnQiLCJmb3JtVmFsdWUiLCJlZGl0VG9kbyJdLCJtYXBwaW5ncyI6Im1CQUNBLE1BZ0JNQSxFQUFpQixLQUNyQixJQUFJQyxFQUFZQyxhQUFhQyxRQUFRLGFBQ3JDLE9BQUdGLEVBQ2lCRyxLQUFLQyxNQUFNSixHQUd0QixJQUtMSyxFQUFlQyxH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QVV0RixTQUFTeUMsTUFFMUNuRCxFQUFZVixHQUNaRCxFQUFxQkMsRUFBWUMsSUcvRTNCMEcsQ0FBUy9FLEVBQUdDLFlBUUptQyxNQUFNQyxLQUFLa0MsR0FDakJsRixTQUFTaUQsSUFDZkEsRUFBT1AsaUJBQWlCLFFBQVN2QixPIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBQcm9qZWN0IGZhY3RvcnlcbmNvbnN0IFByb2plY3QgPSAobmFtZSkgPT4ge1xuICBsZXQgdG9kbyA9IFtdXG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICB0b2RvXG4gIH1cbn1cblxuLy8gU3RvcmUgbmV3IHByb2plY3RcbmNvbnN0IHN0b3JlUHJvamVjdCA9IChuZXdQcm9qZWN0KSA9PiB7XG4gIGxldCBhbGxQcm9qZWN0cyA9IGdldEFsbFByb2plY3RzKClcbiAgYWxsUHJvamVjdHMucHVzaChuZXdQcm9qZWN0KVxuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIm15UHJvamVjdFwiLCBKU09OLnN0cmluZ2lmeShhbGxQcm9qZWN0cykpXG59XG5cbi8vIEdldCBzdG9yZWQgcHJvamVjdHNcbmNvbnN0IGdldEFsbFByb2plY3RzID0gKCkgPT4ge1xuICBsZXQgcHJvamVjdExTID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJteVByb2plY3RcIilcbiAgaWYocHJvamVjdExTKSB7XG4gICAgbGV0IGFsbFByb2plY3RzID0gSlNPTi5wYXJzZShwcm9qZWN0TFMpXG4gICAgcmV0dXJuIGFsbFByb2plY3RzXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFtdXG4gIH1cbn1cblxuLy8gRmluZCBhIHByb2plY3RcbmNvbnN0IGZpbmRQcm9qZWN0ID0gKHByb2plY3ROYW1lKSA9PiB7XG4gIGxldCBhbGxQcm9qZWN0cyA9IGdldEFsbFByb2plY3RzKClcbiAgbGV0IHRoYXRQcm9qZWN0ID0gYWxsUHJvamVjdHMuZmluZChzdG9yZWRQcm9qZWN0ID0+IHN0b3JlZFByb2plY3QubmFtZSA9PSBwcm9qZWN0TmFtZSlcbiAgcmV0dXJuIHRoYXRQcm9qZWN0XG59XG5cbi8vIFVwZGF0ZSBwcm9qZWN0IHN0b3JhZ2VcbmNvbnN0IHVwZGF0ZVByb2plY3RTdG9yYWdlID0gKG5ld1Byb2plY3QsIG9sZFByb2plY3QpID0+IHtcbiAgbGV0IHByb2plY3RTdG9yYWdlID0gZ2V0QWxsUHJvamVjdHMoKVxuICBsZXQgdGVtcFN0b3JhZ2VcblxuICBwcm9qZWN0U3RvcmFnZS5tYXAoKHByb2plY3QsIGluZGV4KSA9PiB7XG4gICAgaWYgKHByb2plY3QubmFtZSA9PSBvbGRQcm9qZWN0Lm5hbWUgJiYgbmV3UHJvamVjdCA9PT0gb2xkUHJvamVjdCkge1xuICAgICAgLy8gRGVsZXRlXG4gICAgICBwcm9qZWN0U3RvcmFnZS5zcGxpY2UoaW5kZXgsIDEpXG4gICAgICB0ZW1wU3RvcmFnZSA9IEpTT04uc3RyaW5naWZ5KHByb2plY3RTdG9yYWdlKVxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJteVByb2plY3RcIiwgdGVtcFN0b3JhZ2UpXG4gICAgfSBlbHNlIGlmIChwcm9qZWN0Lm5hbWUgPT0gb2xkUHJvamVjdC5uYW1lKSB7XG4gICAgICAvLyBBZGRcbiAgICAgIHByb2plY3RTdG9yYWdlLnNwbGljZShpbmRleCwgMSwgbmV3UHJvamVjdClcbiAgICAgIHRlbXBTdG9yYWdlID0gSlNPTi5zdHJpbmdpZnkocHJvamVjdFN0b3JhZ2UpXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIm15UHJvamVjdFwiLCB0ZW1wU3RvcmFnZSlcbiAgICB9IFxuICB9KVxufVxuXG4vLyBTeW5jaHJvbml6ZSBjdXJyZW50IHByb2plY3RcbmNvbnN0IHN5bmNQcm9qZWN0ID0gKHByb2plY3QpID0+IHtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJjdXJyZW50UHJvamVjdFwiLEpTT04uc3RyaW5naWZ5KHByb2plY3QpKVxufVxuXG4vLyBHZXQgY3VycmVudCBwcm9qZWN0XG5jb25zdCBnZXRDdXJyZW50UHJvamVjdCA9ICgpID0+IHtcbiAgbGV0IGN1cnJlbnRQcm9qZWN0TFMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImN1cnJlbnRQcm9qZWN0XCIpXG4gIGlmIChjdXJyZW50UHJvamVjdExTKSB7XG4gICAgbGV0IGN1cnJlbnRQcm9qZWN0ID0gSlNPTi5wYXJzZShjdXJyZW50UHJvamVjdExTKVxuICAgIHJldHVybiBjdXJyZW50UHJvamVjdFxuICB9IGVsc2Uge1xuICAgIHJldHVybiBudWxsXG4gIH1cbn1cblxuLy8gQ3JlYXRlIG5ldyBwcm9qZWN0XG5jb25zdCBjcmVhdGVOZXdQcm9qZWN0ID0gKGUpID0+IHtcbiAgbGV0IHByb2plY3ROYW1lID0gZS50YXJnZXQuZWxlbWVudHMubmFtZS52YWx1ZVxuICBsZXQgbmV3UHJvamVjdCA9IFByb2plY3QocHJvamVjdE5hbWUpXG4gIHN0b3JlUHJvamVjdChuZXdQcm9qZWN0KSAgXG4gIHN5bmNQcm9qZWN0KG5ld1Byb2plY3QpXG59XG5cbi8vIEVkaXQgcHJvamVjdCBuYW1lXG5jb25zdCBlZGl0VGhpc1Byb2plY3QgPSAoZSkgPT4ge1xuICBsZXQgb2xkUHJvamVjdCA9IGdldEN1cnJlbnRQcm9qZWN0KClcbiAgbGV0IG5ld1Byb2plY3QgPSBnZXRDdXJyZW50UHJvamVjdCgpXG4gIG5ld1Byb2plY3QubmFtZSA9IGUudGFyZ2V0LmVsZW1lbnRzLm5hbWUudmFsdWVcbiAgc3luY1Byb2plY3QobmV3UHJvamVjdClcbiAgdXBkYXRlUHJvamVjdFN0b3JhZ2UobmV3UHJvamVjdCwgb2xkUHJvamVjdClcbn1cblxuLy8gRGVsZXRlIHByb2plY3RcbmNvbnN0IGRlbGV0ZVRoaXNQcm9qZWN0ID0gKCkgPT4ge1xuICBsZXQgY29uZmlybWF0aW9uID0gY29uZmlybShcIkRlbGV0ZSB0aGlzIHByb2plY3Q/XCIpXG4gIGlmICghY29uZmlybWF0aW9uKSByZXR1cm5cblxuICBsZXQgb2xkUHJvamVjdCA9IGdldEN1cnJlbnRQcm9qZWN0KClcbiAgbGV0IG5ld1Byb2plY3QgPSBnZXRDdXJyZW50UHJvamVjdCgpXG4gIFxuICAvLyBVcGRhdGUgdHdvIGRhdGFiYXNlXG4gIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiY3VycmVudFByb2plY3RcIilcbiAgdXBkYXRlUHJvamVjdFN0b3JhZ2UobmV3UHJvamVjdCwgb2xkUHJvamVjdClcbiAgbG9jYXRpb24ucmVsb2FkKClcbn1cblxuLy8gVXBkYXRlIHByb2plY3QgY3VycmVudFByb2plY3QudXBkYXRlIHRoaXMubmFtZVxuXG5cbmV4cG9ydCB7XG4gIFByb2plY3QsXG4gIHN0b3JlUHJvamVjdCxcbiAgZ2V0QWxsUHJvamVjdHMsXG4gIGZpbmRQcm9qZWN0LFxuICBzeW5jUHJvamVjdCxcbiAgZ2V0Q3VycmVudFByb2plY3QsXG4gIGNyZWF0ZU5ld1Byb2plY3QsXG4gIGVkaXRUaGlzUHJvamVjdCxcbiAgZGVsZXRlVGhpc1Byb2plY3QsXG4gIHVwZGF0ZVByb2plY3RTdG9yYWdlXG59XG5cbiIsImltcG9ydCB7Z2V0QWxsUHJvamVjdHMsIHVwZGF0ZVByb2plY3RTdG9yYWdlLCBzeW5jUHJvamVjdCxcbiAgICAgICAgZ2V0Q3VycmVudFByb2plY3R9IGZyb20gXCIuL3Byb2plY3RcIlxuXG4vLyBUb2RvIGZhY3RvcnlcbmNvbnN0IFRvZG8gPSAodGl0bGUsIGR1ZSwgcHJpb3JpdHksIGNoZWNrZWQpID0+IHtcblxuICByZXR1cm4ge1xuICAgIHRpdGxlLFxuICAgIGR1ZSxcbiAgICBwcmlvcml0eSxcbiAgICBjaGVja2VkXG4gIH1cbn1cblxuLy8gQ3JlYXRlIG5ldyB0b2RvXG5jb25zdCBjcmVhdGVUb2RvID0gKGUpID0+IHtcbiAgbGV0IGZvcm1EYXRhID0gZS50YXJnZXQuZWxlbWVudHNcbiAgbGV0IHRpdGxlID0gZm9ybURhdGEudGl0bGUudmFsdWVcbiAgbGV0IGR1ZSA9IGZvcm1EYXRhLmR1ZS52YWx1ZVxuICBsZXQgcHJpb3JpdHkgPSBmb3JtRGF0YS5wcmlvcml0eS52YWx1ZVxuICBsZXQgY2hlY2tlZCA9IGZhbHNlXG4gIGxldCBuZXdUb2RvID0gVG9kbyh0aXRsZSwgZHVlLCBwcmlvcml0eSwgY2hlY2tlZClcblxuICByZXR1cm4gbmV3VG9kb1xufVxuXG4vLyBHZXQgdG9kbyBjb250ZW50XG5jb25zdCBnZXRUb2RvQ29udGVudCA9IChwcm9qZWN0KSA9PiB7XG4gIGxldCB0YWJsZVJvd3MgPSBbXVxuICBsZXQgYXJyYXkgPSBwcm9qZWN0LnRvZG9cblxuICBhcnJheS5mb3JFYWNoKCh0b2RvLCBpbmRleCkgPT4ge1xuICAgIGxldCByb3dIdG1sID0gYFxuICAgIDx0ciBjbGFzcz0nJHt0b2RvLmNoZWNrZWQgPyAnY29tcGxldGUnIDogdG9kby5wcmlvcml0eX0nPlxuICAgICAgPHRkPiR7dG9kby50aXRsZX08L3RkPlxuICAgICAgPHRkPiR7dG9kby5kdWV9PC90ZD5cbiAgICAgIDx0ZD4ke3RvZG8ucHJpb3JpdHl9PC90ZD5cbiAgICAgIDx0ZD5cbiAgICAgICAgPGJ1dHRvbiBjbGFzcz0nY2hlY2stdG9kbycgZGF0YS1pbmRleD0nJHtpbmRleH0nPlxuICAgICAgICAgICR7XG4gICAgICAgICAgICB0b2RvLmNoZWNrZWRcbiAgICAgICAgICAgICAgPyBcIjxzcGFuIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+dGFza19hbHQ8L3NwYW4+XCJcbiAgICAgICAgICAgICAgOiBcIjxzcGFuIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+cmVtb3ZlX2NpcmNsZV9vdXRsaW5lPC9zcGFuPlwiXG4gICAgICAgICAgfVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvdGQ+XG4gICAgICA8dGQ+PGJ1dHRvbiBjbGFzcz0nZWRpdC10b2RvJyBkYXRhLWluZGV4PScke2luZGV4fSc+PHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1pY29uc1wiPmRlc2NyaXB0aW9uPC9zcGFuPjwvYnV0dG9uPjwvdGQ+XG4gICAgICA8dGQ+PGJ1dHRvbiBjbGFzcz0nZGVsZXRlLXRvZG8nIGRhdGEtaW5kZXg9JyR7aW5kZXh9Jz48c3BhbiBjbGFzcz1cIm1hdGVyaWFsLWljb25zXCI+ZGVsZXRlX2ZvcmV2ZXI8L3NwYW4+PC9idXR0b24+PC90ZD5cbiAgICA8L3RyPmBcblxuICB0YWJsZVJvd3MucHVzaChyb3dIdG1sKVxuICB9KVxuXG4gIHJldHVybiB0YWJsZVJvd3Ncbn1cblxuLy8gU2hvdyB0b2Rvc1xuY29uc3Qgc2hvd1RvZG9zID0gKHByb2plY3QpID0+IHtcbiAgbGV0IHRvZG9JdGVtcyA9IGdldFRvZG9Db250ZW50KHByb2plY3QpXG4gIGlmICh0b2RvSXRlbXMpIHtcbiAgICBsZXQgbGlzdEh0bWwgPSB0b2RvSXRlbXMubWFwKCh0YWJsZVJvdykgPT4gdGFibGVSb3cpLmpvaW4oXCJcIilcbiAgICByZXR1cm4gbGlzdEh0bWxcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG4vLyBDaGVjayBvciB1bmNoZWNrIHRvZG9cbmNvbnN0IGNoZWNrVG9kbyA9IChlKSA9PiB7XG4gIGxldCBvbGRQcm9qZWN0ID0gZ2V0Q3VycmVudFByb2plY3QoKVxuICBsZXQgbmV3UHJvamVjdCA9IGdldEN1cnJlbnRQcm9qZWN0KClcbiAgbGV0IHRvZG9JbmRleCA9IGUudGFyZ2V0LmNsb3Nlc3QoXCJidXR0b25cIikuZGF0YXNldC5pbmRleFxuICBsZXQgYWx0ZXJlZFRvZG8gPSBuZXdQcm9qZWN0LnRvZG9bdG9kb0luZGV4XVxuICBcbiAgYWx0ZXJlZFRvZG8uY2hlY2tlZCA9ICEoYWx0ZXJlZFRvZG8uY2hlY2tlZClcbiAgc3luY1Byb2plY3QobmV3UHJvamVjdClcbiAgdXBkYXRlUHJvamVjdFN0b3JhZ2UobmV3UHJvamVjdCwgb2xkUHJvamVjdClcbiAgLy8gVXBkYXRlIGludGVyZmFjZVxuICBsb2NhdGlvbi5yZWxvYWQoKVxufVxuXG4vLyBBdXRvZmlsbCBvbGQgdG9kbyBjb250ZW50XG5jb25zdCBmaWxsVG9kb2NvbnRlbnQgPSAoZm9ybSwgdG9kb0luZGV4KSA9PiB7XG4gIGxldCBvbGRQcm9qZWN0ID0gZ2V0Q3VycmVudFByb2plY3QoKVxuICBsZXQgb2xkVG9kbyA9IG9sZFByb2plY3QudG9kb1t0b2RvSW5kZXhdXG4gIGxldCBvbGRUaXRsZSA9IG9sZFRvZG8udGl0bGVcbiAgbGV0IG9sZER1ZSA9IG9sZFRvZG8uZHVlXG4gIGxldCBvbGRQcmlvcml0eSA9IG9sZFRvZG8ucHJpb3JpdHlcblxuICBmb3JtLnRpdGxlLnZhbHVlID0gb2xkVGl0bGVcbiAgZm9ybS5kdWUudmFsdWUgPSBvbGREdWVcbiAgZm9ybS5wcmlvcml0eS52YWx1ZSA9IG9sZFByaW9yaXR5XG59XG5cbi8vIEVkaXQgdG9kbyBjb250ZW50XG5jb25zdCBlZGl0VG9kbyA9IChlLCB0b2RvSW5kZXgpID0+IHtcbiAgbGV0IG9sZFByb2plY3QgPSBnZXRDdXJyZW50UHJvamVjdCgpXG4gIGxldCBuZXdQcm9qZWN0ID0gZ2V0Q3VycmVudFByb2plY3QoKVxuICBsZXQgYWx0ZXJlZFRvZG8gPSBuZXdQcm9qZWN0LnRvZG9bdG9kb0luZGV4XVxuICBsZXQgZm9ybVZhbHVlID0gZS50YXJnZXQuZWxlbWVudHNcblxuICBhbHRlcmVkVG9kby50aXRsZSA9IGZvcm1WYWx1ZS50aXRsZS52YWx1ZVxuICBhbHRlcmVkVG9kby5kdWUgPSBmb3JtVmFsdWUuZHVlLnZhbHVlXG4gIGFsdGVyZWRUb2RvLnByaW9yaXR5ID0gZm9ybVZhbHVlLnByaW9yaXR5LnZhbHVlXG5cbiAgc3luY1Byb2plY3QobmV3UHJvamVjdClcbiAgdXBkYXRlUHJvamVjdFN0b3JhZ2UobmV3UHJvamVjdCwgb2xkUHJvamVjdClcbn1cblxuLy8gRGVsZXRlIHRvZG9cbmNvbnN0IGRlbGV0ZVRvZG8gPSAoZSkgPT4ge1xuICBsZXQgY29uZmlybWF0aW9uID0gY29uZmlybShcIkRlbGV0ZSB0aGlzIHRvZG8/XCIpXG4gIGlmICghY29uZmlybWF0aW9uKSByZXR1cm5cblxuICBsZXQgb2xkUHJvamVjdCA9IGdldEN1cnJlbnRQcm9qZWN0KClcbiAgbGV0IG5ld1Byb2plY3QgPSBnZXRDdXJyZW50UHJvamVjdCgpXG4gIGxldCB0b2RvSW5kZXggPSBlLnRhcmdldC5jbG9zZXN0KFwiYnV0dG9uXCIpLmRhdGFzZXQuaW5kZXhcbiAgbGV0IGFsdGVyZWRUb2RvID0gbmV3UHJvamVjdC50b2RvXG5cbiAgYWx0ZXJlZFRvZG8uc3BsaWNlKHRvZG9JbmRleCwgMSlcbiAgLy8gVXBkYXRlIHR3byBkYXRhYmFzZVxuICBzeW5jUHJvamVjdChuZXdQcm9qZWN0KVxuICB1cGRhdGVQcm9qZWN0U3RvcmFnZShuZXdQcm9qZWN0LCBvbGRQcm9qZWN0KVxuICBsb2NhdGlvbi5yZWxvYWQoKVxufVxuXG5leHBvcnQge1xuICBUb2RvLFxuICBjcmVhdGVUb2RvLFxuICBzaG93VG9kb3MsXG4gIGNoZWNrVG9kbyxcbiAgZmlsbFRvZG9jb250ZW50LFxuICBlZGl0VG9kbyxcbiAgZGVsZXRlVG9kb1xufSIsImltcG9ydCB7IGdldEFsbFByb2plY3RzLCBmaW5kUHJvamVjdCwgc3luY1Byb2plY3QsIFxuICAgICAgICBnZXRDdXJyZW50UHJvamVjdCwgY3JlYXRlTmV3UHJvamVjdH0gZnJvbSBcIi4vcHJvamVjdFwiXG5pbXBvcnQge3Nob3dUb2Rvc30gZnJvbSBcIi4vdG9kb1wiXG5cbmNvbnN0IG1vZGFsU2VjdGlvbnMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwibW9kYWxcIilcbmNvbnN0IHNpZGViYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3RcIilcbmNvbnN0IHRvZ2dsZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudG9nZ2xlLXByb2plY3RcIilcbmNvbnN0IHRvZ2dsZUljb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi50b2dnbGUtaWNvbnNcIilcbmNvbnN0IGFkZFByb2plY3RCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZC1wcm9qZWN0XCIpXG5jb25zdCBuZXdQcm9qZWN0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5ldy1wcm9qZWN0LWZvcm0tbW9kYWxcIikgIFxuY29uc3QgbmV3UHJvamVjdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5ldy1wcm9qZWN0LWZvcm1cIilcbmNvbnN0IGNhbmNlbEJ0bnMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiY2FuY2VsXCIpXG5jb25zdCBwcm9qZWN0TGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1saXN0XCIpXG5jb25zdCBwcm9qZWN0Qm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1ib2R5XCIpXG5jb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1uYW1lXCIpXG5jb25zdCB0b2RvTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudG9kby1saXN0XCIpXG5jb25zdCBwcm9qZWN0c0xpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwibGlzdC1pdGVtXCIpXG5cbi8vIFNob3cgb3IgaGlkZSBzaWRlYmFyXG5sZXQgY2FuVG9nZ2xlU2lkZUJhciA9ICgoKSA9PiB7XG4gIHRvZ2dsZUJ0bi5vbmNsaWNrID0gKCkgPT4ge1xuICAgIHNpZGViYXIuY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKVxuICAgIHRvZ2dsZUljb25zLmZvckVhY2goKGljb24pID0+IGljb24uY2xhc3NMaXN0LnRvZ2dsZShcImhpZGRlblwiKSlcbiAgfVxufSkoKVxuXG4vLyBPcGVuIG5ldyBwcm9qZWN0IGZvcm1cbmxldCBjYW5UcmlnZ2VyTmV3UHJvamVjdEZvcm0gPSAoKCkgPT4ge1xuICBhZGRQcm9qZWN0QnRuLm9uY2xpY2sgPSAoKSA9PiB7XG4gICAgbmV3UHJvamVjdE1vZGFsLmNsYXNzTGlzdC50b2dnbGUoXCJoaWRkZW5cIilcbiAgfVxufSkoKVxuXG4vLyBDcmVhdGUgcHJvamVjdFxubGV0IGNhbkNyZWF0ZVByb2plY3QgPSAoKCkgPT4ge1xuICBuZXdQcm9qZWN0Rm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGNyZWF0ZU5ld1Byb2plY3QpXG59KSgpXG5cbi8vIENhbmNlbCBmb3JtXG5sZXQgY2FuQ2FuY2VsRm9ybSA9ICgoKSA9PiB7XG4gIGxldCBidXR0b25zQXJyYXkgPSBBcnJheS5mcm9tKGNhbmNlbEJ0bnMpXG4gIGJ1dHRvbnNBcnJheS5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICBsZXQgbW9kYWwgPSBidXR0b24uY2xvc2VzdChcInNlY3Rpb25cIilcbiAgICBidXR0b24ub25jbGljayA9ICgpID0+IHtcbiAgICAgIG1vZGFsLmNsYXNzTGlzdC50b2dnbGUoXCJoaWRkZW5cIilcbiAgICB9XG4gIH0pXG59KSgpXG5cbi8vIENhbmNlbCBmb3JtIGJ5IGNsaWNraW5nIG91dHNpZGVcbmxldCBjYW5DbGlja091dHNpZGUgPSAoKCkgPT4ge1xuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgbGV0IGNsYXNzZXMgPSBlLnRhcmdldC5jbGFzc05hbWUuc3BsaXQoXCIgXCIpXG4gICAgbGV0IGhhc01vZGFsID0gY2xhc3Nlcy5zb21lKChvbmVjbGFzcykgPT4gb25lY2xhc3MgPT0gXCJtb2RhbFwiKVxuICAgIGlmIChoYXNNb2RhbCkge1xuICAgICAgbGV0IG1vZGFscyA9IEFycmF5LmZyb20obW9kYWxTZWN0aW9ucylcbiAgICAgIG1vZGFscy5mb3JFYWNoKChzZWN0aW9uKSA9PiB7XG4gICAgICAgIHNlY3Rpb24uY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKVxuICAgICAgfSApXG4gICAgfVxuICB9KSAgXG59KSgpXG5cbi8vIFNob3cgcHJvamVjdHNcbmxldCBjYW5TaG93UHJvamVjdCA9ICgoKSA9PiB7XG4gIGxldCBhbGxQcm9qZWN0cyA9IGdldEFsbFByb2plY3RzKClcbiAgYWxsUHJvamVjdHMubWFwKChwcm9qZWN0KSA9PiB7XG4gICAgbGV0IG5ld0xpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIilcbiAgICBuZXdMaW5lLmlubmVySFRNTCA9IHByb2plY3QubmFtZVxuICAgIG5ld0xpbmUuY2xhc3NMaXN0LmFkZChcImxpc3QtaXRlbVwiKVxuICAgIHByb2plY3RMaXN0LmFwcGVuZENoaWxkKG5ld0xpbmUpXG4gIH0pXG59KSgpXG5cbi8vIFNob3cgdG9kb1xubGV0IGNhblNob3dDb250ZW50ID0gKCgpID0+IHtcbiAgbGV0IHByb2plY3RzQXJyYXkgPSBBcnJheS5mcm9tKHByb2plY3RzTGlzdClcbiAgcHJvamVjdHNBcnJheS5mb3JFYWNoKChsaXN0SXRlbSkgPT4geyAgICBcbiAgICBsaXN0SXRlbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoZSkgPT4ge1xuICAgICAgbGV0IHByb2plY3QgPSBmaW5kUHJvamVjdChsaXN0SXRlbS50ZXh0Q29udGVudClcbiAgICAgIC8vIFN5bmNocm9uaXplIGN1cnJlbnQgcHJvamVjdFxuICAgICAgc3luY1Byb2plY3QocHJvamVjdClcbiAgICAgIC8vIEF1dG8gdXBkYXRlIHByb2plY3QgY29udGVudFxuICAgICAgcHJvamVjdE5hbWUuaW5uZXJIVE1MID0gcHJvamVjdC5uYW1lXG4gICAgICB0b2RvTGlzdC5pbm5lckhUTUwgPSBzaG93VG9kb3MocHJvamVjdClcbiAgICAgIHByb2plY3RCb2R5LmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRkZW5cIikgIFxuICAgICAgbG9jYXRpb24ucmVsb2FkKClcbiAgICB9KVxuICB9KVxufSkoKVxuXG4vLyBEaXNwbGF5IGN1cnJlbnQgcHJvamVjdFxuY29uc3QgY2FuRGlzcGxheUN1cnJlbnRQcm9qZWN0ID0gKCgpID0+IHtcbiAgbGV0IHByb2plY3RzQXJyYXkgPSBBcnJheS5mcm9tKHByb2plY3RzTGlzdClcbiAgbGV0IHN0b3JlZFByb2plY3QgPSBnZXRDdXJyZW50UHJvamVjdCgpXG4gIHByb2plY3RzQXJyYXkuZm9yRWFjaCgobGlzdEl0ZW0pID0+IHtcbiAgICBsaXN0SXRlbS5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIilcbiAgICBsZXQgY3VycmVudFByb2plY3QgPSBmaW5kUHJvamVjdChsaXN0SXRlbS50ZXh0Q29udGVudClcbiAgICBpZiAoY3VycmVudFByb2plY3QubmFtZSA9PSBzdG9yZWRQcm9qZWN0Lm5hbWUpIHtcbiAgICAgIGxpc3RJdGVtLmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RlZFwiKVxuICAgIH1cbiAgfSlcbn0pKClcblxuIiwiaW1wb3J0IHtnZXRBbGxQcm9qZWN0cywgZ2V0Q3VycmVudFByb2plY3QsIGVkaXRUaGlzUHJvamVjdCwgXG4gICAgICAgIGRlbGV0ZVRoaXNQcm9qZWN0LCBzeW5jUHJvamVjdCwgdXBkYXRlUHJvamVjdFN0b3JhZ2V9IGZyb20gXCIuL3Byb2plY3RcIlxuaW1wb3J0IHtjcmVhdGVUb2RvLCBzaG93VG9kb3N9IGZyb20gXCIuL3RvZG9cIlxuXG5jb25zdCBwcm9qZWN0Qm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1ib2R5XCIpXG5jb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1uYW1lXCIpXG5jb25zdCBlZGl0UHJvamVjdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXByb2plY3QtZm9ybS1tb2RhbFwiKVxuY29uc3QgZWRpdFByb2plY3RGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lZGl0LXByb2plY3QtZm9ybVwiKVxuY29uc3QgZWRpdFByb2plY3RCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtcHJvamVjdFwiKVxuY29uc3QgZGVsUHJvamVjdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZGVsZXRlLXByb2plY3RcIilcbmNvbnN0IG5ld1RvZG9Nb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmV3LXRvZG8tZm9ybS1tb2RhbFwiKVxuY29uc3QgbmV3UHJvamVjdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5ldy10b2RvLWZvcm1cIilcbmNvbnN0IG5ld1RvZG9CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5ldy10b2RvXCIpXG5jb25zdCB0b2RvTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudG9kby1saXN0XCIpXG5cbi8vIEF1dG8gaGlkZSBib2R5IHdoZW4gbm8gcHJvamVjdHNcbmNvbnN0IGF1dG9IaWRlQm9keSA9ICgoKSA9PiB7XG4gIGxldCBhbGxQcm9qZWN0cyA9IGdldEFsbFByb2plY3RzKClcbiAgaWYgKGFsbFByb2plY3RzLmxlbmd0aCA9PSAwKSB7XG4gICAgcHJvamVjdEJvZHkuY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKVxuICB9XG59KSgpXG5cbi8vIEF1dG8gc2hvdyBsYXN0IGNoZWNrZWQgcHJvamVjdFxuY29uc3QgYXV0b1Nob3dCb2R5ID0gKCgpID0+IHtcbiAgbGV0IGN1cnJlbnRQcm9qZWN0ID0gZ2V0Q3VycmVudFByb2plY3QoKVxuICBpZiAoY3VycmVudFByb2plY3QpIHtcbiAgICBwcm9qZWN0TmFtZS5pbm5lckhUTUwgPSBjdXJyZW50UHJvamVjdC5uYW1lXG4gICAgcHJvamVjdEJvZHkuY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKVxuICAgIHRvZG9MaXN0LmlubmVySFRNTCA9IHNob3dUb2RvcyhjdXJyZW50UHJvamVjdClcbiAgfSBcbn0pKClcblxuLy8gT3BlbiBlZGl0IHByb2plY3QgZm9ybVxuY29uc3QgY2FuVHJpZ2dlckVkaXRQcm9qZWN0Rm9ybSA9ICgoKSA9PntcbiAgZWRpdFByb2plY3RCdG4ub25jbGljayA9ICgpID0+IHtcbiAgICBlZGl0UHJvamVjdE1vZGFsLmNsYXNzTGlzdC50b2dnbGUoXCJoaWRkZW5cIilcbiAgfVxufSkoKVxuXG4vLyBFZGl0IHByb2plY3RcbmNvbnN0IGNhbkVkaXRQcm9qZWN0ID0gKCgpID0+IHtcbiAgZWRpdFByb2plY3RGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZWRpdFRoaXNQcm9qZWN0KVxufSkoKVxuXG4vLyBEZWxldGUgcHJvamVjdFxuY29uc3QgY2FuRGVsZXRlUHJvamVjdCA9ICgoKSA9PiB7XG4gIGRlbFByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGRlbGV0ZVRoaXNQcm9qZWN0KVxufSkoKVxuXG4vLyBPcGVuIG5ldyB0b2RvIGZvcm1cbmNvbnN0IGNhblRyaWdnZXJOZXdUb2RvRm9ybSA9ICgoKSA9PiB7XG4gIG5ld1RvZG9CdG4ub25jbGljayA9ICgpID0+IHtcbiAgICBuZXdUb2RvTW9kYWwuY2xhc3NMaXN0LnRvZ2dsZShcImhpZGRlblwiKVxuICB9XG59KSgpXG5cbi8vIENyZWF0ZSBuZXcgdG9kb1xuY29uc3QgY2FuQ3JlYXRlVG9kbyA9ICgoKSA9PiB7XG4gIG5ld1Byb2plY3RGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwoZSkgPT4ge1xuICAgIGxldCBuZXdUb2RvID0gY3JlYXRlVG9kbyhlKVxuICAgIGxldCBvbGRQcm9qZWN0ID0gZ2V0Q3VycmVudFByb2plY3QoKVxuICAgIGxldCBuZXdQcm9qZWN0ID0gZ2V0Q3VycmVudFByb2plY3QoKVxuICAgIG5ld1Byb2plY3QudG9kby5wdXNoKG5ld1RvZG8pXG4gICAgc3luY1Byb2plY3QobmV3UHJvamVjdClcbiAgICB1cGRhdGVQcm9qZWN0U3RvcmFnZShuZXdQcm9qZWN0LCBvbGRQcm9qZWN0KVxuICB9KVxufSkoKVxuXG4iLCIvLyBUYWJsZSB3aXRoaW4gYm9keVxuaW1wb3J0IHtjaGVja1RvZG8sIGZpbGxUb2RvY29udGVudCwgZWRpdFRvZG8sXG4gICAgICAgIGRlbGV0ZVRvZG99IGZyb20gXCIuL3RvZG9cIlxuXG5jb25zdCBjaGVja1RvZG9CdG5zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNoZWNrLXRvZG9cIilcbmNvbnN0IGVkaXRUb2RvQnRucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJlZGl0LXRvZG9cIilcbmNvbnN0IGVkaXRUb2RvTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtdG9kby1mb3JtLW1vZGFsXCIpXG5jb25zdCBlZGl0VG9kb0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVkaXQtdG9kby1mb3JtXCIpXG5jb25zdCBkZWxUb2RvQnRucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJkZWxldGUtdG9kb1wiKVxuXG4vLyBDaGVjayBvciB1bmNoZWNrIG9uZSB0b2RvXG5jb25zdCBjYW5DaGVja1RvZG8gPSAoKCkgPT4ge1xuICBsZXQgYnV0dG9ucyA9IEFycmF5LmZyb20oY2hlY2tUb2RvQnRucylcbiAgYnV0dG9ucy5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGNoZWNrVG9kbylcbiAgfSlcbn0pKClcblxuLy8gT3BlbiBlZGl0IHRvZG8gZm9ybSBhbmQgZWRpdFxuY29uc3QgY2FuVHJpZ2dlckFuZEVkaXRUb2RvRm9ybSA9ICgoKSA9PntcbiAgbGV0IGJ1dHRvbnMgPSBBcnJheS5mcm9tKGVkaXRUb2RvQnRucylcbiAgYnV0dG9ucy5mb3JFYWNoKChidXR0b24pID0+IHtcbiAgICBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICBlZGl0VG9kb01vZGFsLmNsYXNzTGlzdC50b2dnbGUoXCJoaWRkZW5cIilcbiAgICAgIGxldCB0b2RvSW5kZXggPSBlLnRhcmdldC5jbG9zZXN0KFwiYnV0dG9uXCIpLmRhdGFzZXQuaW5kZXhcbiAgICAgIGZpbGxUb2RvY29udGVudChlZGl0VG9kb0Zvcm0sIHRvZG9JbmRleClcbiAgICAgIGVkaXRUb2RvRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gICAgICAgIGVkaXRUb2RvKGUsIHRvZG9JbmRleClcbiAgICAgIH0pXG4gICAgfSlcbiAgfSlcbn0pKClcblxuLy8gRGVsZXRlIG9uZSB0b2RvXG5jb25zdCBjYW5EZWxUb2RvID0gKCgpID0+IHtcbiAgbGV0IGJ1dHRvbnMgPSBBcnJheS5mcm9tKGRlbFRvZG9CdG5zKVxuICBidXR0b25zLmZvckVhY2goKGJ1dHRvbikgPT4ge1xuICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZGVsZXRlVG9kbylcbiAgfSlcbn0pKClcbiJdLCJzb3VyY2VSb290IjoiIn0=