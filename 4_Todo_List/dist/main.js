(()=>{"use strict";const e=()=>{let e=localStorage.getItem("myProject");return e?JSON.parse(e):[]},t=(e,t)=>{let o,r=JSON.parse(localStorage.getItem("myProject"));r.map(((c,l)=>{c.name==t.name&&e==t?(r.splice(l,1),o=JSON.stringify(r),localStorage.setItem("myProject",o)):(r.splice(l,1,e),o=JSON.stringify(r),localStorage.setItem("myProject",o))}))},o=e=>{localStorage.setItem("currentProject",JSON.stringify(e))},r=()=>{let e=localStorage.getItem("currentProject");return e?JSON.parse(e):null},c=document.getElementsByClassName("modal"),l=document.querySelector(".project"),n=document.querySelector(".toggle-project"),s=document.querySelectorAll(".toggle-icons"),a=document.getElementById("add-project"),d=document.querySelector(".new-project-form-modal"),i=document.querySelector(".new-project-form"),m=document.getElementsByClassName("cancel"),u=document.querySelector(".project-list"),p=document.querySelector(".project-body"),g=document.querySelector(".project-name"),y=document.querySelector(".todo-list");n.onclick=()=>{l.classList.toggle("active"),s.forEach((e=>e.classList.toggle("hidden")))},a.onclick=()=>{d.classList.toggle("hidden")},i.addEventListener("submit",(t=>{let r={name:t.target.elements.name.value,todo:[]};(t=>{let o=e();o.push(t),localStorage.setItem("myProject",JSON.stringify(o))})(r),o(r)})),Array.from(m).forEach((e=>{let t=e.closest("section");e.onclick=()=>{t.classList.toggle("hidden")}})),window.addEventListener("click",(e=>{e.target.className.split(" ").some((e=>"modal"==e))&&Array.from(c).forEach((e=>{e.classList.add("hidden")}))})),e().map((e=>{let t=document.createElement("li");t.innerHTML=e.name,t.classList.add("list-item"),u.appendChild(t)})),(()=>{let t=document.getElementsByClassName("list-item");Array.from(t).forEach((t=>{t.addEventListener("click",(()=>{let l=(t=>e().find((e=>e.name==t)))(t.textContent);o(l),r(l),c(l),p.classList.remove("hidden")}))}));let r=e=>{g.innerHTML=e.name},c=e=>{let t=(e=>{let t=[];return e.todo.forEach((e=>{let o=`\n    <tr class='${e.checked?"complete":e.priority}'>\n      <td>${e.title}</td>\n      <td>${e.due}</td>\n      <td>${e.priority}</td>\n      <td>\n        <button class='progress'>\n          ${e.checked?"<span class='material-icons'>task_alt</span>":"<span class='material-icons'>remove_circle_outline</span>"}\n        </button>\n      </td>\n      <td><button class='edit-todo'><span class="material-icons">zoom_in</span></button></td>\n      <td><button class='delete-todo'><span class="material-icons">delete_forever</span></button></td>\n    </tr>`;t.push(o)})),t})(e);t&&(y.innerHTML=t.map((e=>e)).join(""))}})();const S=document.querySelector(".project-body"),j=document.querySelector(".project-name"),h=document.querySelector(".edit-project-form-modal"),f=document.querySelector(".edit-project-form"),L=document.querySelector(".edit-project"),q=document.querySelector(".delete-project"),v=document.querySelector(".new-todo-form-modal"),E=document.querySelector(".new-todo-form"),k=document.querySelector(".new-todo");0==e().length&&S.classList.add("hidden"),(()=>{let e=r();e&&(j.innerHTML=e.name,S.classList.remove("hidden"))})(),L.onclick=()=>{h.classList.toggle("hidden")},f.addEventListener("submit",(e=>{let c=r(),l=r();l.name=e.target.elements.name.value,o(l),t(l,c)})),q.addEventListener("click",(()=>{if(!confirm("Delete this project?"))return;let e=r(),o=r();localStorage.removeItem("currentProject"),t(o,e),location.reload()})),k.onclick=()=>{v.classList.toggle("hidden")},E.addEventListener("submit",(e=>{let c=(e=>{let t=e.target.elements;return{title:t.title.value,due:t.due.value,priority:t.priority.value,checked:!1}})(e),l=r(),n=r();n.todo.push(c),o(n),t(n,l)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,