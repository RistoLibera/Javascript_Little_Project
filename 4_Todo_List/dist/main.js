(()=>{"use strict";const e=()=>{let e=localStorage.getItem("myProject");return e?JSON.parse(e):[]},t=(t,o)=>{let r,l=e();l.map(((e,c)=>{e.name==o.name&&t===o?(l.splice(c,1),r=JSON.stringify(l),localStorage.setItem("myProject",r)):e.name==o.name&&(l.splice(c,1,t),r=JSON.stringify(l),localStorage.setItem("myProject",r))}))},o=e=>{localStorage.setItem("currentProject",JSON.stringify(e))},r=()=>{let e=localStorage.getItem("currentProject");return e?JSON.parse(e):null},l=e=>{let t=(e=>{let t=[];return e.todo.forEach(((e,o)=>{let r=`\n    <tr class='${e.checked?"complete":e.priority}'>\n      <td>${e.title}</td>\n      <td>${e.due}</td>\n      <td>${e.priority}</td>\n      <td>\n        <button class='check-todo' data-index='${o}'>\n          ${e.checked?"<span class='material-icons'>task_alt</span>":"<span class='material-icons'>remove_circle_outline</span>"}\n        </button>\n      </td>\n      <td><button class='edit-todo' data-index='${o}'><span class="material-icons">description</span></button></td>\n      <td><button class='delete-todo' data-index='${o}'><span class="material-icons">delete_forever</span></button></td>\n    </tr>`;t.push(r)})),t})(e);return t?t.map((e=>e)).join(""):[]},c=e=>{let l=r(),c=r(),n=e.target.closest("button").dataset.index,a=c.todo[n];a.checked=!a.checked,o(c),t(c,l),location.reload()},n=document.getElementsByClassName("modal"),a=document.querySelector(".project"),d=document.querySelector(".toggle-project"),s=document.querySelectorAll(".toggle-icons"),i=document.getElementById("add-project"),m=document.querySelector(".new-project-form-modal"),u=document.querySelector(".new-project-form"),y=document.getElementsByClassName("cancel"),g=document.querySelector(".project-list"),p=document.querySelector(".project-body"),S=document.querySelector(".project-name"),h=document.querySelector(".todo-list"),f=document.getElementsByClassName("list-item");d.onclick=()=>{a.classList.toggle("active"),s.forEach((e=>e.classList.toggle("hidden")))},i.onclick=()=>{m.classList.toggle("hidden")},u.addEventListener("submit",(t=>{let r={name:t.target.elements.name.value,todo:[]};(t=>{let o=e();o.push(t),localStorage.setItem("myProject",JSON.stringify(o))})(r),o(r)})),Array.from(y).forEach((e=>{let t=e.closest("section");e.onclick=()=>{t.classList.toggle("hidden")}})),window.addEventListener("click",(e=>{e.target.className.split(" ").some((e=>"modal"==e))&&Array.from(n).forEach((e=>{e.classList.add("hidden")}))})),e().map((e=>{let t=document.createElement("li");t.innerHTML=e.name,t.classList.add("list-item"),g.appendChild(t)})),(()=>{let t=Array.from(f);t.forEach((t=>{t.addEventListener("click",(c=>{r(c);let n=(t=>e().find((e=>e.name==t)))(t.textContent);o(n),S.innerHTML=n.name,h.innerHTML=l(n),p.classList.remove("hidden"),location.reload()}))}));const r=e=>{t=Array.from(f),t.forEach((e=>{e.classList.remove("selected")})),e.target.classList.add("selected")}})();const L=document.querySelector(".project-body"),v=document.querySelector(".project-name"),E=document.querySelector(".edit-project-form-modal"),j=document.querySelector(".edit-project-form"),q=document.querySelector(".edit-project"),k=document.querySelector(".delete-project"),b=document.querySelector(".new-todo-form-modal"),N=document.querySelector(".new-todo-form"),C=document.querySelector(".new-todo"),I=document.querySelector(".todo-list"),$=(0==e().length&&L.classList.add("hidden"),(()=>{let e=r();e&&(v.innerHTML=e.name,L.classList.remove("hidden"),I.innerHTML=l(e))})(),q.onclick=()=>{E.classList.toggle("hidden")},j.addEventListener("submit",(e=>{let l=r(),c=r();c.name=e.target.elements.name.value,o(c),t(c,l)})),k.addEventListener("click",(()=>{if(!confirm("Delete this project?"))return;let e=r(),o=r();localStorage.removeItem("currentProject"),t(o,e),location.reload()})),C.onclick=()=>{b.classList.toggle("hidden")},N.addEventListener("submit",(e=>{let l=(e=>{let t=e.target.elements;return{title:t.title.value,due:t.due.value,priority:t.priority.value,checked:!1}})(e),c=r(),n=r();n.todo.push(l),o(n),t(n,c)})),document.getElementsByClassName("check-todo")),w=document.getElementsByClassName("edit-todo"),A=document.querySelector(".edit-todo-form-modal"),B=document.querySelector(".edit-todo-form");document.getElementsByClassName("delete-todo"),Array.from($).forEach((e=>{e.addEventListener("click",c)})),Array.from(w).forEach((e=>{e.addEventListener("click",(e=>{A.classList.toggle("hidden");let l=e.target.closest("button").dataset.index;((e,t)=>{let o=r().todo[t],l=o.title,c=o.due,n=o.priority;e.title.value=l,e.due.value=c,e.priority.value=n})(B,l),B.addEventListener("submit",(e=>{((e,l)=>{let c=r(),n=r(),a=n.todo[l],d=e.target.elements;a.title=d.title.value,a.due=d.due.value,a.priority=d.priority.value,o(n),t(n,c)})(e,l)}))}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,