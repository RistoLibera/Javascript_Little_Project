(()=>{"use strict";const e=()=>{let e=localStorage.getItem("myProject");return e?JSON.parse(e):[]},t=(t,o)=>{let c,r=e();r.map(((e,n)=>{e.name==o.name&&t===o?(r.splice(n,1),c=JSON.stringify(r),localStorage.setItem("myProject",c)):e.name==o.name&&(r.splice(n,1,t),c=JSON.stringify(r),localStorage.setItem("myProject",c))}))},o=e=>{localStorage.setItem("currentProject",JSON.stringify(e))},c=()=>{let e=localStorage.getItem("currentProject");return e?JSON.parse(e):null},r=e=>{let t=(e=>{let t=[];return e.todo.forEach(((e,o)=>{let c=`\n    <tr class='${e.checked?"complete":e.priority}'>\n      <td>${e.title}</td>\n      <td>${e.due}</td>\n      <td>${e.priority}</td>\n      <td>\n        <button class='check-todo' data-index='${o}'>\n          ${e.checked?"<span class='material-icons'>task_alt</span>":"<span class='material-icons'>remove_circle_outline</span>"}\n        </button>\n      </td>\n      <td><button class='edit-todo' data-index='${o}'><span class="material-icons">zoom_in</span></button></td>\n      <td><button class='delete-todo' data-index='${o}'><span class="material-icons">delete_forever</span></button></td>\n    </tr>`;t.push(c)})),t})(e);return t?t.map((e=>e)).join(""):[]},n=e=>{let r=c(),n=c(),l=(e.target.closest("tr"),e.target.closest("button").dataset.index),a=n.todo[l];a.checked=!a.checked,o(n),t(n,r),location.reload()},l=document.getElementsByClassName("modal"),a=document.querySelector(".project"),s=document.querySelector(".toggle-project"),d=document.querySelectorAll(".toggle-icons"),i=document.getElementById("add-project"),m=document.querySelector(".new-project-form-modal"),u=document.querySelector(".new-project-form"),y=document.getElementsByClassName("cancel"),g=document.querySelector(".project-list"),p=document.querySelector(".project-body"),S=document.querySelector(".project-name"),h=document.querySelector(".todo-list"),f=document.getElementsByClassName("list-item");s.onclick=()=>{a.classList.toggle("active"),d.forEach((e=>e.classList.toggle("hidden")))},i.onclick=()=>{m.classList.toggle("hidden")},u.addEventListener("submit",(t=>{let c={name:t.target.elements.name.value,todo:[]};(t=>{let o=e();o.push(t),localStorage.setItem("myProject",JSON.stringify(o))})(c),o(c)})),Array.from(y).forEach((e=>{let t=e.closest("section");e.onclick=()=>{t.classList.toggle("hidden")}})),window.addEventListener("click",(e=>{e.target.className.split(" ").some((e=>"modal"==e))&&Array.from(l).forEach((e=>{e.classList.add("hidden")}))})),e().map((e=>{let t=document.createElement("li");t.innerHTML=e.name,t.classList.add("list-item"),g.appendChild(t)})),(()=>{let t=Array.from(f);t.forEach((t=>{t.addEventListener("click",(n=>{c(n);let l=(t=>e().find((e=>e.name==t)))(t.textContent);o(l),S.innerHTML=l.name,h.innerHTML=r(l),p.classList.remove("hidden")}))}));const c=e=>{t=Array.from(f),t.forEach((e=>{e.classList.remove("selected")})),e.target.classList.add("selected")}})();const L=document.querySelector(".project-body"),j=document.querySelector(".project-name"),E=document.querySelector(".edit-project-form-modal"),q=document.querySelector(".edit-project-form"),v=document.querySelector(".edit-project"),k=document.querySelector(".delete-project"),N=document.querySelector(".new-todo-form-modal"),b=document.querySelector(".new-todo-form"),C=document.querySelector(".new-todo"),I=document.querySelector(".todo-list"),$=(0==e().length&&L.classList.add("hidden"),(()=>{let e=c();e&&(j.innerHTML=e.name,L.classList.remove("hidden"),I.innerHTML=r(e))})(),v.onclick=()=>{E.classList.toggle("hidden")},q.addEventListener("submit",(e=>{let r=c(),n=c();n.name=e.target.elements.name.value,o(n),t(n,r)})),k.addEventListener("click",(()=>{if(!confirm("Delete this project?"))return;let e=c(),o=c();localStorage.removeItem("currentProject"),t(o,e),location.reload()})),C.onclick=()=>{N.classList.toggle("hidden")},b.addEventListener("submit",(e=>{let r=(e=>{let t=e.target.elements;return{title:t.title.value,due:t.due.value,priority:t.priority.value,checked:!1}})(e),n=c(),l=c();l.todo.push(r),o(l),t(l,n)})),document.getElementsByClassName("check-todo"));document.getElementsByClassName("edit-todo"),document.getElementsByClassName("delete-todo"),Array.from($).forEach((e=>{e.addEventListener("click",n)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,